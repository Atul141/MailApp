package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/validate"
)

/*User user

swagger:model User
*/
type User struct {

	/* User's personal/official email address

	Required: true
	*/
	Email strfmt.Email `db:"email" json:"email"`

	/* emp id

	Required: true
	*/
	EmpID string `db:"emp_id" json:"emp_id"`

	/* name
	 */
	Name *string `db:"name" json:"name,omitempty"`

	/* User's personal/official phone number
	 */
	PhoneNo *string `db:"phone_no" json:"phone_no,omitempty"`
}

// Validate validates this user
func (m *User) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateEmail(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateEmpID(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *User) validateEmail(formats strfmt.Registry) error {

	if err := validate.Required("email", "body", strfmt.Email(m.Email)); err != nil {
		return err
	}

	return nil
}

func (m *User) validateEmpID(formats strfmt.Registry) error {

	if err := validate.RequiredString("emp_id", "body", string(m.EmpID)); err != nil {
		return err
	}

	return nil
}
